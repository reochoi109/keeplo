basePath: /api/v1
definitions:
  dto.CheckPasswordRequest:
    properties:
      password:
        type: string
    required:
    - password
    type: object
  dto.DuplicateEmailRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.LoginResponse:
    properties:
      email:
        type: string
      token:
        type: string
      user_id:
        type: string
    type: object
  dto.RegisterMonitorRequest:
    properties:
      address:
        type: string
      name:
        type: string
      port:
        type: string
    type: object
  dto.ResponseFormat:
    properties:
      data: {}
      error_code:
        type: integer
      error_message:
        type: string
      message:
        type: string
    type: object
  dto.SignupRequest:
    properties:
      check_password:
        type: string
      email:
        type: string
      nickname:
        maxLength: 20
        minLength: 2
        type: string
      password:
        minLength: 8
        type: string
    required:
    - check_password
    - email
    - nickname
    - password
    type: object
  dto.UpdateMonitorRequest:
    properties:
      address:
        type: string
      name:
        type: string
      port:
        type: string
    type: object
  dto.UpdateNicknameRequest:
    properties:
      nickname:
        maxLength: 20
        minLength: 2
        type: string
    required:
    - nickname
    type: object
  dto.UpdatePasswordRequest:
    properties:
      current_password:
        type: string
      new_password:
        minLength: 8
        type: string
    required:
    - current_password
    - new_password
    type: object
host: 10.30.8.25:8888
info:
  contact: {}
  description: keeplo
  title: keeplo API
  version: "0.1"
paths:
  /auth/duplicate:
    get:
      consumes:
      - application/json
      description: 이메일 중복 체크 요청
      parameters:
      - description: 이메일
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/dto.DuplicateEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
      summary: 이메일 중복 체크
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: 로그인 요청
      parameters:
      - description: 로그인 사용자 정보
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.ResponseFormat'
            - properties:
                data:
                  $ref: '#/definitions/dto.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
      summary: 로그인
      tags:
      - auth
  /auth/me:
    get:
      consumes:
      - application/json
      description: 사용자 정보 조회
      parameters:
      - description: 사용자 고유 번호
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
      summary: 사용자 정보
      tags:
      - auth
  /auth/me/logout:
    delete:
      consumes:
      - application/json
      description: 로그아웃 요청
      parameters:
      - description: 사용자 고유번호
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
      summary: 로그아웃
      tags:
      - auth
  /auth/me/nickname:
    put:
      consumes:
      - application/json
      description: 사용자의 닉네임을 변경합니다.
      parameters:
      - description: 닉네임 변경 요청
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateNicknameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
      summary: 닉네임 변경
      tags:
      - auth
  /auth/me/password:
    put:
      consumes:
      - application/json
      description: 사용자의 비밀번호를 변경합니다.
      parameters:
      - description: 비밀번호 변경 요청
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
      summary: 비밀번호 변경
      tags:
      - auth
  /auth/me/resign:
    delete:
      consumes:
      - application/json
      description: 회원탈퇴 요청
      parameters:
      - description: 사용자 고유번호
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
      summary: 회원탈퇴
      tags:
      - auth
  /auth/password:
    post:
      consumes:
      - application/json
      description: 비밀번호 확인 요청
      parameters:
      - description: 비밀번호
        in: body
        name: password
        required: true
        schema:
          $ref: '#/definitions/dto.CheckPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
      summary: 비밀번호 확인 요청
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: 회원 가입 요청
      parameters:
      - description: 가입 사용자 정보
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.SignupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
      summary: 회원 가입
      tags:
      - auth
  /monitor:
    get:
      consumes:
      - application/json
      description: 사용자가 등록한 모니터링 목록 조회
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
      summary: 모니터링 목록
      tags:
      - monitor
    post:
      consumes:
      - application/json
      description: 모니터링 추가 요청
      parameters:
      - description: 신규 모니터링
        in: body
        name: monitor
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterMonitorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
      summary: 모니터링 추가
      tags:
      - monitor
  /monitor/{id}:
    delete:
      consumes:
      - application/json
      description: 모니터링 삭제 요청
      parameters:
      - description: 모니터링 고유 번호
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
      summary: 모니터링 삭제
      tags:
      - monitor
    get:
      consumes:
      - application/json
      description: 사용자가 등록한 모니터링 상세 정보 조회
      parameters:
      - description: 모니터링 고유 번호
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
      summary: 상세 모니터링 정보
      tags:
      - monitor
    put:
      consumes:
      - application/json
      description: 모니터링 상세 정보 업데이트 요청
      parameters:
      - description: 모니터링 고유 번호
        in: path
        name: id
        required: true
        type: string
      - description: 모니터링 업데이트 정보
        in: body
        name: monitor
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateMonitorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseFormat'
      summary: 모니터링 상세 정보 업데이트
      tags:
      - monitor
schemes:
- http
swagger: "2.0"
